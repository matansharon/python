from random import randint
def f(n):
    if n<1:
        print("the input must be greater the 0")
    for i in range(n,0,-1):
        print ("1"+"/"+str(i))
#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------
def f1(n):
    if n<1:
        print("the input must be greater the 0")
    res=0
    for i in range(n,0,-1):
        res+=1/i
    print(res)
#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------
def max_grade(arr1,arr2,arr3):
    res=[]
    for i in range(0,len(arr1)):
        res.append(max_of_3(arr1[i],arr2[i],arr3[i]))
    return res;
#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------
def random_arr():
    res1=[]
    res2=[]
    res3=[]
    len=randint(5,10);
    for i in range(len):
        res1.append(randint(0,100))
        res2.append(randint(0,100))
        res3.append(randint(0,100))
    return [res1,res2,res3]
#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------
def max_of_3(value1,value2,value3):
        res=-1
        if value1>=value2:
            if value1>=value3:
                return value1
            else:
                return value3
        else:
            if value2>=value3:
                return value2
            else:
                return value3
#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------
def is_symetric(arr):
    a=[]
    b=[]
    if len(arr)%2==0:
        len1=len(arr)//2
        a=arr[:len1]
        b=arr[len1:]
    else:
        len1=len(arr)//2
        a=arr[:len1+1]
        b=arr[len1:]
    print (a,b)
    for i in range(len(a)):
        if a[i]!=b[len(b)-i-1]:
            return False
    return True
#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------#--------
def ReadWords():
    res=[]
    len1=-1
    try:
        len1=int(input("please enter the number of words you want to enter: "))
    except ValueError:
        print("the input is not correct. please try again")
    while len(res)<len1:
        res.append(input())
    return res
#-------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------
def PrintReverseList():
    arr=ReadWords()
    res=[]
    for i in range(len(arr)-1,-1,-1):
        res.append(arr[i])
    for word in res:
        print(word,end=' ')
#------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------
def sub_list(small,big):
    for val in small:
        if val not in big:
            return False
    return True
#------------------------------------------------------------------------------------------------------------
#------------------------------------------------------------------------------------------------------------
def fibonacci(n):
    arr=[1,1]
    
    while arr[-1]<=n:
        arr.append(arr[-1]+arr[-2])
    print(arr)



# --------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------#----------------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------------



